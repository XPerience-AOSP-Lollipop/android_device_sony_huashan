From 421bec96e2e07e3e8a69a2362a11ed21adc64cf2 Mon Sep 17 00:00:00 2001
From: bagyusz <phelyx92@gmail.com>
Date: Sat, 17 May 2014 19:57:33 +0200
Subject: [PATCH] [PATCH] cmhw: Glove Mode Switch 2/2

Change-Id: Ib71db2ea0a3ca4bd3a8f74447ceb0bd32b5030ef
---
 res/values/cm_strings.xml                          |  4 ++
 res/xml/more_device_settings.xml                   | 11 +++++
 .../android/settings/cyanogenmod/BootReceiver.java |  1 +
 .../settings/cyanogenmod/MoreDeviceSettings.java   | 56 ++++++++++++++++++++++
 4 files changed, 72 insertions(+)

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 158586b..174f325 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -705,6 +705,10 @@ two in order to insert additional control points. \'Remove\' deletes the selecte
     <string name="gamma_tuning_brightness">Brightness</string>
     <string name="gamma_tuning_saturation">Saturation</string>
 
+    <!-- Hardware tunables - Xperia SP Glove mode -->
+    <string name="glove_mode_switch_title">Glove mode</string>
+    <string name="glove_mode_switch_summary">Glove mode Switch</string>
+
     <!-- Category title for headset specific Settings.
          [CHAR LIMIT=40] -->
     <string name="headset_category_title">Headset</string>
diff --git a/res/xml/more_device_settings.xml b/res/xml/more_device_settings.xml
index fbf28d3..00b6d1d 100644
--- a/res/xml/more_device_settings.xml
+++ b/res/xml/more_device_settings.xml
@@ -62,4 +62,15 @@
 
     </PreferenceCategory>
 
+    <PreferenceCategory
+        android:key="glove_mode_switch_category"
+        android:title="@string/glove_mode_switch_title" >
+
+        <CheckBoxPreference
+            android:key="glove_mode_switch"
+            android:title="@string/glove_mode_switch_title"
+            android:summary="@string/glove_mode_switch_summary"/>
+
+    </PreferenceCategory>
+
 </PreferenceScreen>
diff --git a/src/com/android/settings/cyanogenmod/BootReceiver.java b/src/com/android/settings/cyanogenmod/BootReceiver.java
index 85d9b5e..62a9715 100644
--- a/src/com/android/settings/cyanogenmod/BootReceiver.java
+++ b/src/com/android/settings/cyanogenmod/BootReceiver.java
@@ -79,6 +79,7 @@ public class BootReceiver extends BroadcastReceiver {
         DisplaySettings.restore(ctx);
         LocationSettings.restore(ctx);
         ButtonSettings.restoreKeyDisabler(ctx);
+        MoreDeviceSettings.restore(ctx);
     }
 
     private void initFreqCapFiles(Context ctx)
diff --git a/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java b/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java
index 0de3c5b..3582142 100644
--- a/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java
+++ b/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java
@@ -18,11 +18,16 @@ package com.android.settings.cyanogenmod;
 
 import android.content.ContentResolver;
 import android.content.Context;
+import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.os.Vibrator;
+import android.preference.CheckBoxPreference;
+import android.preference.Preference;
 import android.preference.PreferenceGroup;
+import android.preference.PreferenceManager;
 import android.preference.PreferenceScreen;
 import android.provider.Settings;
+import android.util.Log;
 
 import com.android.settings.R;
 import com.android.settings.SettingsPreferenceFragment;
@@ -30,6 +35,8 @@ import com.android.settings.hardware.DisplayColor;
 import com.android.settings.hardware.DisplayGamma;
 import com.android.settings.hardware.VibratorIntensity;
 
+import org.cyanogenmod.hardware.GloveModeSwitch;
+
 public class MoreDeviceSettings extends SettingsPreferenceFragment {
     private static final String TAG = "MoreDeviceSettings";
 
@@ -37,6 +44,10 @@ public class MoreDeviceSettings extends SettingsPreferenceFragment {
     private static final String KEY_DISPLAY_CALIBRATION_CATEGORY = "display_calibration_category";
     private static final String KEY_DISPLAY_COLOR = "color_calibration";
     private static final String KEY_DISPLAY_GAMMA = "gamma_tuning";
+    private static final String KEY_GLOVE_MODE_SWITCH_CATEGORY = "glove_mode_switch_category";
+    private static final String KEY_GLOVE_MODE_SWITCH = "glove_mode_switch";
+
+    private CheckBoxPreference mGloveModeSwitch;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -63,5 +74,50 @@ public class MoreDeviceSettings extends SettingsPreferenceFragment {
                 calibrationCategory.removePreference(findPreference(KEY_DISPLAY_GAMMA));
             }
         }
+
+        final PreferenceGroup gloveModeSwitchCategory =
+                (PreferenceGroup) findPreference(KEY_GLOVE_MODE_SWITCH_CATEGORY);
+        mGloveModeSwitch = (CheckBoxPreference) findPreference(KEY_GLOVE_MODE_SWITCH);
+
+        if (isGloveModeSwitchSupported()) {
+            mGloveModeSwitch.setChecked(GloveModeSwitch.isEnabled());
+        } else {
+            getPreferenceScreen().removePreference(gloveModeSwitchCategory);
+        }
+    }
+
+    @Override
+    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {
+
+        if (preference == mGloveModeSwitch) {
+            return GloveModeSwitch.setEnabled(mGloveModeSwitch.isChecked());
+        }
+
+        return super.onPreferenceTreeClick(preferenceScreen, preference);
+    }
+
+    /**
+     * Restore the properties associated with this preference on boot
+     * @param context A valid context
+     */
+    public static void restore(Context context) {
+        if (isGloveModeSwitchSupported()) {
+            final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
+            final boolean enabled = prefs.getBoolean(KEY_GLOVE_MODE_SWITCH, true);
+            if (!GloveModeSwitch.setEnabled(enabled)) {
+                Log.e(TAG, "Failed to restore Glove Mode Switch settings.");
+            } else {
+                Log.d(TAG, "Glove Mode Switch settings restored.");
+            }
+        }
+    }
+
+    private static boolean isGloveModeSwitchSupported() {
+        try {
+            return GloveModeSwitch.isSupported();
+        } catch (NoClassDefFoundError e) {
+            // Hardware abstraction framework not installed
+            return false;
+        }
     }
 }
-- 
1.8.1.2

